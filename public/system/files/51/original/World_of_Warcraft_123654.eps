%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 1
%%Creator: CorelDRAW 12
%%Title: 123654.eps
%%CreationDate: Sun Apr 10 12:17:44 2005
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 12.154
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel12Dict 12.0 0
/wCorel12Dict 300 dict def wCorel12Dict begin
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel12Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
96.01313 113.37364 110.45509 129.78964 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
101.27055 121.35628 m
102.70828 121.35628 L
103.45946 121.35628 104.10321 121.39909 104.63953 121.52778 C
105.15458 121.63521 105.60529 121.82825 105.99165 122.08592 C
106.57077 122.45046 107.00022 122.90117 107.25761 123.41622 C
107.51499 123.93128 107.64397 124.53222 107.64397 125.21877 C
107.60088 126.57061 107.15017 127.53638 106.29184 128.11578 C
105.43351 128.69518 104.40369 128.97411 103.22334 128.95257 C
102.79417 128.95257 102.45090 128.93102 102.17197 128.88822 C
101.91430 128.84542 101.72126 128.78107 101.59257 128.71644 C
101.48513 128.65209 101.39924 128.52340 101.33490 128.35191 C
101.29209 128.18013 101.27055 127.94400 101.27055 127.60072 C
101.27055 121.35628 L
@c
109.36063 122.94425 m
108.65254 122.23587 106.61386 121.27039 106.61386 121.27039 C
103.95298 120.30463 L
103.54535 120.47641 102.98721 120.54076 102.23631 120.54076 C
101.27055 120.54076 L
101.27055 116.52803 L
101.22775 115.49792 101.37798 114.85417 101.69972 114.55370 C
102.02173 114.27477 102.77263 114.10299 103.93143 114.08173 C
103.93143 113.37364 L
96.01313 113.37364 L
96.01313 114.08173 L
97.21474 114.10299 97.96592 114.27477 98.30920 114.55370 C
98.63121 114.83263 98.78145 115.49792 98.73836 116.52803 C
98.73836 126.65650 L
98.73836 127.36460 98.69556 127.90120 98.58813 128.22293 C
98.48098 128.54494 98.22331 128.75953 97.85849 128.86668 C
97.47241 128.97411 96.91455 129.03846 96.14183 129.08126 C
96.14183 129.78964 L
103.63096 129.78964 L
104.72542 129.78964 105.64809 129.72501 106.44208 129.59631 C
107.21480 129.46762 107.87981 129.25304 108.43795 128.93102 C
109.06016 128.60929 109.55367 128.15858 109.89694 127.60072 C
110.26176 127.04287 110.45509 126.37757 110.45509 125.62639 C
110.43354 124.55348 110.06872 123.65235 109.36063 122.94425 C
@c
F

@rax %Note: Object
103.88863 108.98674 117.27893 121.31320 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
103.88863 120.28337 m
103.86709 120.26183 104.85411 120.06879 105.47660 118.84564 C
106.07726 117.62249 110.92706 108.60973 117.27893 108.99581 C
117.27893 109.55395 L
117.27893 109.55395 110.81991 112.70835 108.71688 118.45928 C
108.71688 118.45928 108.20183 120.96992 106.72101 121.31320 C
103.88863 120.28337 L
@c
F

@rax %Note: Object
8.50394 69.49020 89.76869 108.65254 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
54.98391 92.21499 m
57.17254 84.46847 L
57.17254 84.18954 L
55.84224 83.69603 54.25427 82.83770 52.94523 81.89348 C
54.98391 92.21499 L
@c
75.79899 94.74718 m
79.89761 90.73446 L
75.79899 87.38674 L
75.79899 94.74718 L
@c
8.50394 108.65254 m
20.90721 108.65254 L
20.45650 107.32224 20.26346 106.27058 20.26346 105.00463 C
20.26346 100.73424 24.06161 85.51984 24.40488 83.84627 C
30.09146 107.49373 L
35.84239 84.38258 L
36.72227 89.03906 39.40469 104.61827 39.40469 105.73427 C
39.40469 106.84998 39.08268 107.55808 37.90261 108.65254 C
50.88529 108.65254 L
47.83805 105.54094 47.06561 102.47244 46.57181 99.42520 C
45.77811 94.64003 42.34450 75.62750 42.34450 73.80340 C
42.34450 72.55871 42.70932 71.16406 43.54611 70.00526 C
45.54198 71.20687 46.25008 73.26680 46.52901 74.74762 C
47.34454 78.73880 50.30589 92.23654 50.30589 93.35254 C
50.30589 94.36110 49.57625 95.54117 48.22441 96.09902 C
60.34847 103.05184 L
60.13389 101.22775 59.91931 100.24072 59.91931 98.84580 C
59.91931 95.73420 62.77351 87.55852 63.22394 85.73443 C
64.38274 85.88466 65.56309 86.01335 67.34409 86.12079 C
67.34409 83.48145 L
66.33553 83.30967 65.15518 82.98765 64.08227 82.55849 C
65.19827 78.99647 65.77767 75.19833 67.58022 71.50734 C
68.58879 72.81638 68.93206 74.31846 68.93206 75.71310 C
68.93206 92.75159 L
64.29685 95.11200 L
68.28831 97.88031 72.73020 100.66989 76.89345 103.18054 C
89.10340 90.58422 L
81.85039 83.76038 L
86.95757 81.22819 L
86.95757 74.03953 L
86.95757 72.70894 88.30942 70.94948 89.76869 69.49020 C
82.68718 69.49020 L
82.25802 69.49020 80.62724 71.63603 80.49827 71.85061 C
80.28369 72.23698 79.57559 73.84620 79.57559 74.53304 C
79.57559 77.60154 L
75.77745 80.00504 L
75.77745 73.63162 L
75.77745 72.25824 77.04340 70.90639 78.13786 69.49020 C
58.03087 69.49020 L
58.80359 71.35710 59.44734 72.92353 59.44734 74.70454 C
59.44734 76.61452 58.76050 78.33118 58.28854 80.26243 C
57.02230 79.46844 51.42161 76.74321 51.42161 74.01798 C
51.42161 72.32287 52.45172 71.42145 54.42576 69.49020 C
31.70098 69.49020 L
31.95836 70.69181 32.15169 72.49436 32.15169 72.64460 C
32.15169 73.93209 30.56372 82.62312 30.39194 83.80318 C
30.30605 83.91061 L
30.02712 82.66592 28.09587 75.45572 28.09587 72.96661 C
28.09587 71.52888 28.28891 71.44299 28.80397 69.49020 C
16.14331 69.49020 L
17.92431 71.14252 18.50372 71.82907 18.50372 73.43858 C
18.50372 75.15524 17.62384 78.37427 17.30211 79.76891 C
15.28498 88.41685 13.54677 97.04324 10.97178 105.62683 C
10.69285 106.54951 9.25512 107.66551 8.50394 108.65254 C
@c
F

@rax %Note: Object
89.78995 62.49458 184.25197 109.98312 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
137.66485 93.05206 m
139.78913 85.79877 L
138.67342 85.04787 136.93521 84.27543 135.62617 83.33121 C
137.66485 93.05206 L
@c
115.84120 95.21943 m
119.48910 91.39975 L
115.84120 87.96614 L
115.84120 95.21943 L
@c
98.54532 109.98312 m
108.11594 100.28353 L
103.11591 97.30091 L
99.91871 100.49811 L
99.14627 99.79002 98.37354 99.01757 97.66545 98.24513 C
97.66545 74.36126 L
98.37354 73.65317 99.14627 72.85918 99.85436 72.15109 C
105.28328 76.46428 L
107.49373 70.92794 L
108.35206 72.00085 109.16731 74.10387 109.16731 75.39137 C
109.16731 93.52403 L
104.59672 95.97033 L
108.67380 98.58841 113.37335 101.12060 117.72964 103.63124 C
129.14561 91.29231 L
121.76391 84.21080 L
126.72085 81.93628 L
126.72085 73.82494 L
126.72085 73.33143 127.21436 72.19389 127.36460 71.82907 C
128.50186 73.15965 128.60929 74.85477 128.97383 76.37839 C
129.76781 79.76891 132.60047 92.83748 132.60047 94.10343 C
132.60047 95.43402 132.10696 96.05622 130.45465 97.08633 C
143.09376 104.21065 L
143.30835 104.21065 L
143.00816 102.88006 142.79357 101.33518 142.79357 99.98306 C
142.79357 99.06038 145.32548 87.45109 146.03386 87.45109 C
150.49729 87.96614 L
150.49729 85.11222 L
149.38129 84.83329 146.91345 84.31824 146.91345 83.97496 C
146.91345 83.35247 149.61742 73.93209 151.05515 71.37865 C
151.59146 71.89342 151.99937 73.58882 151.99937 74.40435 C
151.99937 93.13767 L
147.10677 95.04765 L
151.44151 98.39509 156.44126 101.74280 160.99058 104.87594 C
165.23943 100.43376 L
165.23943 101.87150 L
184.25197 101.87150 L
184.25197 93.45969 L
183.15751 94.10343 182.19203 95.21943 181.16192 95.21943 C
177.79294 95.21943 L
177.79294 76.24970 L
177.81420 74.38280 179.18759 71.09972 181.20472 69.51175 C
168.26513 69.51175 L
170.53965 71.48580 171.14060 74.21102 171.14060 76.22816 C
171.14060 95.21943 L
168.37228 95.21943 L
167.47115 95.21943 166.29080 94.57569 165.36813 93.45969 C
161.63433 96.91455 L
159.18803 95.17635 L
159.18803 88.67424 L
165.38967 88.67424 L
165.38967 81.70016 L
164.59569 82.49414 163.71581 82.88050 162.87902 82.88050 C
159.18803 82.88050 L
159.18803 74.03953 L
159.18803 72.60180 160.15380 70.84205 161.61279 69.51175 C
140.90513 69.51175 L
141.63477 71.01383 142.47156 73.24554 142.47156 74.89786 C
142.47156 76.63606 141.26995 80.15528 140.94794 81.44277 C
138.15836 79.66176 133.78082 77.38696 133.78082 74.21102 C
133.78082 72.45156 134.89654 71.50734 136.97802 69.49020 C
122.32176 69.49020 L
122.17153 69.49020 121.97849 69.76913 121.84951 69.85502 C
120.56202 70.88485 119.55345 73.54602 119.55345 74.91912 C
119.55345 78.50296 L
115.81965 80.99206 L
115.81965 73.88929 L
115.81965 72.43002 116.97846 71.09972 118.09446 69.49020 C
106.65666 69.49020 L
98.84580 62.49458 L
89.78995 72.32287 L
89.78995 100.34787 L
98.54532 109.98312 L
@c
F

@rax %Note: Object
70.69181 112.55811 91.82863 130.26161 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
81.39969 130.26161 m
82.92331 130.26161 84.33950 130.06857 85.62699 129.63940 C
86.91449 129.21024 88.03049 128.63083 88.95317 127.83685 C
89.87584 127.06413 90.58394 126.14145 91.07773 125.04699 C
91.59250 123.97408 91.82863 122.77247 91.82863 121.50652 C
91.82863 119.85420 91.37792 118.35184 90.47679 116.97846 C
89.57537 115.60535 88.33096 114.53216 86.72145 113.73817 C
85.13348 112.96573 83.33093 112.55811 81.33534 112.55811 C
79.85452 112.55811 78.45987 112.77269 77.17238 113.18031 C
75.88488 113.60948 74.74734 114.21043 73.78186 114.98287 C
72.79455 115.77685 72.04365 116.69953 71.50706 117.77244 C
70.94920 118.82409 70.69181 119.98290 70.69181 121.22731 C
70.69181 122.51509 70.94920 123.69515 71.48580 124.78961 C
72.00057 125.88406 72.77329 126.84954 73.73877 127.66507 C
74.72608 128.50186 75.88488 129.14561 77.19364 129.59631 C
78.50268 130.04702 79.89761 130.26161 81.39969 130.26161 C
@c
80.94898 129.68220 m
79.25386 129.68220 77.85893 129.33893 76.72167 128.65209 C
75.60567 127.96554 74.76888 127.04287 74.23228 125.88406 C
73.69597 124.74680 73.41704 123.48057 73.41704 122.12872 C
73.41704 121.07735 73.58854 120.02570 73.91055 118.95279 C
74.25383 117.87987 74.74734 116.89285 75.41263 116.03452 C
76.09946 115.15465 76.95780 114.44655 78.00917 113.93150 C
79.06054 113.41644 80.26243 113.13751 81.63581 113.13751 C
83.33093 113.13751 84.74712 113.50233 85.86312 114.18888 C
86.97883 114.87572 87.81591 115.79839 88.33096 116.95720 C
88.84602 118.13726 89.10340 119.40350 89.10340 120.81969 C
89.10340 121.95694 88.95317 123.05140 88.63143 124.10306 C
88.30942 125.15443 87.83745 126.09865 87.17216 126.93543 C
86.52841 127.75096 85.67008 128.43751 84.63997 128.93102 C
83.60986 129.44608 82.36545 129.68220 80.94898 129.68220 C
@c
F

@rax %Note: Object
116.27036 113.11597 132.72917 129.72501 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
131.97827 117.10743 m
131.78494 116.52803 131.59191 116.01298 131.37732 115.58381 C
131.14120 115.15465 130.92661 114.81137 130.69077 114.55370 C
130.41184 114.23197 130.04702 114.01739 129.59631 113.88841 C
129.14561 113.78126 128.56620 113.73817 127.87965 113.73817 C
127.36460 113.73817 123.73795 113.75972 123.33033 113.80280 C
122.92243 113.84561 122.57915 113.95276 122.34331 114.08173 C
122.10718 114.21043 121.95694 114.42501 121.87106 114.74674 C
121.78517 115.09030 121.74236 115.58381 121.76391 116.29191 C
121.76391 126.59216 L
121.74236 127.32180 121.78517 127.85811 121.89260 128.20167 C
121.97849 128.54494 122.19307 128.75953 122.51480 128.86668 C
122.83682 128.99565 123.63080 129.25304 124.29581 129.29584 C
124.29581 129.72501 L
116.27036 129.72501 L
116.27036 129.29584 L
116.93565 129.25304 118.28750 128.99565 118.60923 128.86668 C
118.93124 128.75953 119.12428 128.54494 119.21017 128.20167 C
119.29606 127.85811 119.33887 127.32180 119.33887 126.59216 C
119.33887 116.14167 L
119.36041 115.09030 119.25298 114.40346 118.97405 114.10299 C
118.69512 113.80280 117.75090 113.63102 116.72107 113.58822 C
116.72107 113.11597 L
131.82803 113.11597 L
131.91392 113.39490 131.99953 113.56668 132.12850 114.10299 C
132.25720 114.63959 132.36435 115.17591 132.47178 115.71250 C
132.60047 116.24910 132.68636 116.67827 132.72917 116.95720 C
131.97827 117.10743 L
@c
F

@rax %Note: Object
38.80375 112.68680 60.77764 129.46762 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
60.77764 129.46762 m
54.61909 129.46762 L
54.61909 128.75953 L
55.90658 128.65209 55.97093 127.55792 55.62765 126.84954 C
55.26283 125.96995 54.79058 124.91830 54.18992 123.65235 C
53.58898 122.40765 52.94523 121.12016 52.27994 119.78957 C
51.61465 118.45928 51.01398 117.25767 50.45613 116.16321 C
50.39150 116.16321 L
49.61906 117.64375 48.88942 119.10302 48.15978 120.58356 C
47.43043 122.04283 46.78668 123.37342 46.20728 124.55348 C
45.64913 125.73383 45.21997 126.63496 44.91950 127.25745 C
44.64057 127.79376 44.59776 128.15858 44.81235 128.35191 C
45.02693 128.56649 45.69222 128.69518 46.82948 128.75953 C
46.82948 129.46762 L
38.80375 129.46762 L
38.80375 128.75953 L
39.74797 128.71644 40.43480 128.56649 40.90677 128.28728 C
41.35748 128.00835 41.80819 127.42894 42.23735 126.52781 C
42.88110 125.28312 43.58920 123.88819 44.36164 122.32176 C
45.13408 120.77688 45.90680 119.16737 46.72205 117.51506 C
47.51603 115.86274 48.28876 114.25323 49.03965 112.68680 C
50.04822 112.68680 L
50.90655 114.46781 51.80797 116.27036 52.73065 118.11600 C
53.67487 119.93981 54.51165 121.59213 55.26283 123.00860 C
56.03528 124.44633 56.57187 125.47616 56.87206 126.05556 C
57.45146 127.15002 57.98806 127.85811 58.46003 128.18013 C
58.95383 128.50186 59.72627 128.69518 60.77764 128.75953 C
60.77764 129.46762 L
@c
F

@rax %Note: Object
47.10841 112.68680 68.52444 129.46762 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
68.52444 129.46762 m
61.05657 129.46762 L
61.05657 128.75953 L
62.34435 128.65209 63.22394 128.48060 63.50287 128.24447 C
63.76054 128.00835 63.73899 127.55792 63.37417 126.84954 C
63.03090 125.96995 62.53739 124.91830 61.93644 123.65235 C
61.33578 122.40765 60.71329 121.12016 60.04800 119.78957 C
59.36145 118.45928 58.76050 117.25767 58.20265 116.16321 C
58.13830 116.16321 L
57.36586 117.64375 56.63622 119.10302 55.90658 120.58356 C
55.17694 122.04283 54.53320 123.37342 53.95380 124.55348 C
53.39594 125.73383 52.96677 126.63496 52.68784 127.25745 C
52.38737 127.79376 52.51606 128.69518 53.63178 128.75953 C
53.63178 129.46762 L
47.10841 129.46762 L
47.10841 128.75953 L
48.05263 128.71644 48.18132 128.56649 48.65357 128.28728 C
49.10400 128.00835 49.55471 127.42894 49.98387 126.52781 C
50.62762 125.28312 51.33572 123.88819 52.10844 122.32176 C
52.88088 120.77688 53.65332 119.16737 54.46885 117.51506 C
55.26283 115.86274 56.03528 114.25323 56.78646 112.68680 C
57.79502 112.68680 L
58.65335 114.46781 59.55449 116.27036 60.47717 118.11600 C
61.42139 119.93981 62.25846 121.59213 63.03090 123.00860 C
63.78208 124.44633 64.31839 125.47616 64.64041 126.05556 C
65.19827 127.15002 65.73458 127.85811 66.20683 128.18013 C
66.70035 128.50186 67.47279 128.69518 68.52444 128.75953 C
68.52444 129.46762 L
@c
F

@rax %Note: Object
135.06831 112.90139 156.89197 129.68391 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
135.36879 129.68220 m
135.36879 128.97411 L
136.20557 128.93102 136.82778 128.86668 137.23569 128.75953 C
137.64331 128.65209 137.90098 128.41625 138.02967 128.09424 C
138.15836 127.75096 138.20117 127.21436 138.20117 126.48472 C
138.20117 116.12013 L
138.24425 115.04721 138.07247 114.38220 137.70765 114.10299 C
137.32157 113.80280 136.44170 113.63102 135.06831 113.60948 C
135.06831 112.90139 L
142.92227 112.90139 L
144.93940 112.90139 146.78476 113.07317 148.43707 113.41644 C
150.08939 113.75972 151.54866 114.31757 152.79335 115.04721 C
154.08085 115.79839 155.06787 116.74261 155.79751 117.90142 C
156.50561 119.03868 156.87043 120.39052 156.89197 121.95694 C
156.87043 123.15883 156.61304 124.23175 156.09798 125.17597 C
155.58293 126.09865 154.91764 126.87109 154.05931 127.49329 C
153.02920 128.26602 151.74170 128.82387 150.17528 129.16715 C
148.63039 129.53197 146.78476 129.70375 144.68173 129.68220 C
135.36879 129.68220 L
@c
141.01228 127.04287 m
141.01228 127.53638 141.05537 127.90120 141.11972 128.09424 C
141.18406 128.30882 141.31276 128.43751 141.44145 128.50186 C
141.61323 128.60929 141.91370 128.69518 142.34287 128.75953 C
142.77203 128.80233 143.35143 128.84542 144.03798 128.84542 C
145.17553 128.84542 146.20535 128.75953 147.14957 128.58775 C
148.09380 128.41625 148.95213 128.13704 149.70331 127.77250 C
151.03361 127.15002 152.02063 126.31323 152.66466 125.21877 C
153.30841 124.14586 153.63014 122.92271 153.63014 121.59213 C
153.63014 120.19748 153.30841 118.90998 152.64312 117.72964 C
151.99937 116.57083 150.99080 115.62661 149.66022 114.91852 C
148.30838 114.21043 146.61326 113.86715 144.55304 113.84561 C
143.32989 113.82406 142.45002 113.97430 141.87061 114.33912 C
141.29121 114.68239 141.01228 115.32614 141.01228 116.29191 C
141.01228 127.04287 L
@c
F

@rax %Note: Object
76.01357 118.41619 82.25802 123.02986 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
79.23231 123.02986 m
78.52422 123.02986 77.94482 122.92271 77.45131 122.68658 C
76.97906 122.47200 76.61424 122.19307 76.37839 121.82825 C
76.14227 121.48498 76.01357 121.12016 76.01357 120.71254 C
76.01357 120.28337 76.14227 119.87546 76.39965 119.53219 C
76.65732 119.18891 77.02214 118.93124 77.49411 118.71666 C
77.96636 118.52362 78.50268 118.41619 79.10362 118.41619 C
79.70428 118.41619 80.21934 118.50208 80.69159 118.69540 C
81.18510 118.88844 81.54992 119.16737 81.82885 119.51065 C
82.10778 119.85420 82.25802 120.28337 82.25802 120.77688 C
82.25802 121.22731 82.12932 121.61367 81.85039 121.95694 C
81.57146 122.30050 81.20665 122.55789 80.75594 122.75093 C
80.30523 122.94425 79.79017 123.02986 79.23231 123.02986 C
79.23231 123.02986 L
@c
79.06054 122.75093 m
79.59713 122.75093 80.02630 122.55789 80.34831 122.17153 C
80.69159 121.80671 80.84183 121.27039 80.86309 120.58356 C
80.84183 119.96135 80.69159 119.48939 80.39112 119.16737 C
80.09065 118.86690 79.72583 118.69540 79.27512 118.69540 C
78.88904 118.69540 78.54576 118.80255 78.26655 118.99559 C
77.98762 119.18891 77.79458 119.44630 77.64435 119.76831 C
77.49411 120.09005 77.42976 120.45487 77.40822 120.84123 C
77.42976 121.44189 77.58000 121.91414 77.88047 122.23587 C
78.20220 122.57943 78.58857 122.75093 79.03928 122.75093 C
79.06054 122.75093 L
@c
F

@rax %Note: Object
82.66564 118.52362 86.82888 122.94425 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
86.82888 121.89260 m
86.80734 122.10718 86.78580 122.32176 86.76425 122.53635 C
86.74299 122.72967 86.74299 122.87991 86.72145 122.94425 C
82.66564 122.94425 L
82.66564 122.70813 L
82.90176 122.68658 83.05200 122.66504 83.15943 122.64378 C
83.26658 122.60069 83.35247 122.53635 83.37402 122.45046 C
83.41682 122.34331 83.41682 122.19307 83.41682 122.00003 C
83.41682 119.48939 L
83.41682 119.27480 83.41682 119.12457 83.37402 119.01713 C
83.35247 118.90998 83.26658 118.84564 83.15943 118.82409 C
83.05200 118.78101 82.90176 118.75975 82.66564 118.75975 C
82.66564 118.52362 L
85.51984 118.52362 L
85.51984 118.75975 L
85.26217 118.75975 85.06913 118.78101 84.94044 118.82409 C
84.81175 118.84564 84.72586 118.90998 84.70431 119.01713 C
84.66151 119.12457 84.63997 119.27480 84.66151 119.48939 C
84.66151 120.56230 L
84.98324 120.56230 L
85.24091 120.56230 85.45550 120.54076 85.58419 120.51921 C
85.71288 120.49795 85.82031 120.45487 85.86312 120.39052 C
85.92746 120.30463 85.97027 120.19748 85.99181 120.04724 C
86.31383 120.04724 L
86.31383 121.39909 L
85.99181 121.39909 L
85.97027 121.24885 85.92746 121.14170 85.86312 121.07735 C
85.82031 120.99146 85.71288 120.94838 85.58419 120.92712 C
85.45550 120.90557 85.24091 120.90557 84.98324 120.90557 C
84.66151 120.90557 L
84.66151 122.40765 L
84.63997 122.51509 84.66151 122.57943 84.70431 122.60069 C
84.74712 122.64378 84.85455 122.64378 85.00479 122.64378 C
85.30526 122.64378 L
85.56265 122.64378 85.43395 122.62224 85.58419 122.60069 C
85.71288 122.57943 85.84157 122.51509 85.92746 122.45046 C
86.01335 122.38611 86.07770 122.30050 86.14205 122.19307 C
86.20639 122.10718 86.24948 122.00003 86.29228 121.84980 C
86.82888 121.89260 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel12Dict 12.0 0
%%EOF
